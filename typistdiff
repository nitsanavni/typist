#!/usr/bin/env python3

import sys
import tempfile
import os


def main():
    # Read input from stdin
    input_data = sys.stdin.read().strip()

    if not input_data:
        print("Invalid input format. Requires at least one file path and file content.")
        return

    # Split input data by '---' to handle multiple entries
    entries = input_data.split('---')

    for entry in entries:
        lines = entry.strip().split("\n")

        # Check if there's at least a file path and some file content
        if len(lines) < 2:
            print("Invalid entry format. Requires a file path and file content.")
            continue

        # Extract file path and new file content from each entry
        file_path = lines[0].strip()
        new_content = "\n".join(lines[1:])

        # Check if the existing file exists, or treat it as empty if it doesn't
        try:
            with open(file_path, 'r'):
                pass
        except FileNotFoundError:
            print(
                f"File '{file_path}' does not exist, treating it as empty for diffing.")

        # Create a temporary file to store the new content
        with tempfile.NamedTemporaryFile(delete=False, mode='w') as new_file:
            new_file_name = new_file.name
            new_file.write(new_content)

        # Use os.system to invoke vimdiff to display the differences with the existing file
        autoread = "set autoread"
        approve = f"!cp {new_file_name} {file_path}"
        approve_cmd = f"command! Approve execute 'silent {approve}' | qa"
        notify = "echo 'Approve changes with :Approve'"
        cmds = " ".join(
            [f"-c \"{cmd}\"" for cmd in [autoread, approve_cmd, notify]])
        os.system(
            f"tmux neww vimdiff {cmds} {new_file_name} {file_path}")


if __name__ == "__main__":
    main()
